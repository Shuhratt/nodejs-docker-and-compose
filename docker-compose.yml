services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: backend:latest
    ports:
      - 4000:3000
    env_file:
      - ./backend/env/.env.deploy
    depends_on:
      db:
        condition: service_healthy
    command: sh -c "echo 'ðŸ“¦ Starting migrations...' && npx typeorm migration:run -d ./data-source.js && echo 'ðŸš€ Starting server...' && npm run start:prod"
    networks:
      - backend-network
      - frontend-network

  db:
    image: "postgres:17"
    restart: always
    env_file:
      - ./backend/env/.env.deploy
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - backend-network

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    depends_on:
      db:
        condition: service_healthy
    networks:
      - backend-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: frontend:latest
    ports:
      - 8081:80
    restart: unless-stopped
    networks:
      - frontend-network

networks:
  backend-network:
  frontend-network:
